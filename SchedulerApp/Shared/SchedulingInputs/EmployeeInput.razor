@namespace SchedulerApp.Shared.SchedulingInputs
@using MudBlazor
@using SchedulerApp.Data.Scheduler
@using SchedulerApp.Modules.Helpers
@using System.Globalization


@if (EmployeeData != null)
{
    <MudPaper Class="rounded-lg m-4 p-1.5">
        <div class="d-flex flex-row">
            <MudTextField Class="mx-2 my-2" @bind-Value="EmployeeData.Name" Label="Full name" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>

            <MudTextField Class="mx-2 my-2" Margin="Margin.Dense" @bind-Value:get="StringHelper.JoinList(EmployeeData.Occupations)" @bind-Value:set="value => EmployeeData.Occupations = StringHelper.FormatSplitString(value)" Label="Occupations (seperate using comma)" Variant="Variant.Outlined" HelperTextOnFocus="true"></MudTextField>

            <MudNumericField Class="mx-2 my-2" @bind-Value="EmployeeData.Wage" Culture="@CultureInfo.GetCultureInfo("de-DE")" Margin="Margin.Dense" Variant="Variant.Outlined" T="double" Label="Hourly wage" Adornment="Adornment.End" AdornmentText="€"></MudNumericField>

            <div class="flex flex-col justify-center bg-red-600 rounded-lg m-2">
                <MudButton Class="" OnClick="RemovedTriggered">✖</MudButton>
            </div>
        </div>
    </MudPaper>
}

@code {
    [Parameter]
    public Employee EmployeeData {get;set;} = default!;

    [Parameter]
    public EventCallback<Employee> OnRemovedClickEvent { get; set; }

    private async Task RemovedTriggered()
    {
        await OnRemovedClickEvent.InvokeAsync(EmployeeData);
    }

    private string OccupationToString() { return string.Join(", ", EmployeeData.Occupations); }

    private void Log()
    {
        Console.WriteLine(EmployeeData.ToString());
    }
}